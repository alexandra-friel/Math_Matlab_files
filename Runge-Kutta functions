alpha = 2;
beta = 1.2;
gamma = 1;
delta = 0.9;

f = @(t,y) [alpha*y(1) - beta*y(1)*y(2)
           -gamma*y(2) + delta*y(1)*y(2)];
h = 0.01;
n = 600; 
t = t0;
y = [R0 F0]';
 for i = 1:n
    t(i+1) = t(i) + h; % gets several incrementing values for t

% Runge-Kutta fouth-order method
    k1 = f(t(i), y(:,i));
    k2 = f((t(i) + h/2), (y(:,i) + (h/2)*k1));
    k3 = f((t(i) + h/2), (y(:,i) + (h/2)*k2));
    k4 = f((t(i) + h), (y(:,i) + h*k3));
    y(:,i+1) = y(:,i) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);
end
R = y(1,:);
F = y(2,:);

figure(1);
plot(R,F,'mo');
xlabel('Rabbits');
ylabel('Foxes');

figure(2);
plot(t,R,'g-');
hold on;
plot(t,F,'b-');
xlabel('t');
ylabel('population')
legend('Rabbits','Foxes');
